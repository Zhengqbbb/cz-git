# shellcheck shell=dash

(

# Section: Arg
WORK_DIR="$(x wsroot)"
WEB_SITE="cz-git.qbb.sh"
DOC_SEARCH_CONFIG_FILE=$WORK_DIR/docs/.vitepress/build/docSearchConfig.json

# Section: Fuction
search() {
    local _command=""
    x tui form --ctrl_exit_strategy \
        _command   "select target search command"   "only_console" = only_console all google baidu bing docsearch
    [ -n "$_command" ] || return 1
    search_"${_command}"
}

log() {
    printf "\n\033[1;32m%s \033[1;33m%s \033[1;32m%s\033[0m\n" \
        "»»»" "$1" "«««"
}

search_all() {
    search_google
    search_baidu
    search_bing
    search_docsearch
}

search_only_console() {
    search_google
    search_baidu
    search_bing
}

search_google() {
    log "google search console collecting"
	curl -X GET "https://www.google.com/ping?sitemap=https://$WEB_SITE/sitemap.xml"
}

search_baidu() {
    log "baidu search console collecting"
	local BAIDU_TOKEN
	BAIDU_TOKEN="$(grep 'BAIDU_TOKEN' < "$WORK_DIR/.env")"
	local TOKEN="${BAIDU_TOKEN#*=}"
	[ -z "$TOKEN" ] && return 0
	curl -H 'Content-Type:text/plain' --data-binary @urls.txt "http://data.zz.baidu.com/urls?site=$WEB_SITE&token=$TOKEN"
}

search_bing() {
    log "bing search console collecting"
	curl -X GET "http://www.bing.com/webmaster/ping.aspx?siteMap=https://$WEB_SITE/sitemap.xml"
    local BING_TOKEN
	BING_TOKEN="$(grep 'BING_TOKEN' < "$WORK_DIR/.env")"
	local TOKEN="${BING_TOKEN#*=}"
	[ -z "$TOKEN" ] && [ ! -f "$WORK_DIR/urls.txt" ] && return 0
    curl "https://ssl.bing.com/webmaster/api.svc/json/SubmitUrlbatch?apikey=$TOKEN" \
        -X POST \
        -H 'Content-Type: application/json;charset=utf-8' \
        -d "$(x jo "{siteUrl: 'https://${WEB_SITE}', urlList: [ $(awk '{ print "\"" $0 "\"" }' < "$WORK_DIR/urls.txt") ]}")"
}

search_docsearch() {
    log "docs search index collecting"
    local env_file_path="$WORK_DIR/.env"
  	[ ! -f "$env_file_path" ] && \
        echo 'APPLICATION_ID=your_algolia_application_id' >> "$env_file_path" && \
        echo 'APPLICATION_ID=your_algolia_api_key' >> "$env_file_path" && \
        return 1
	docker run -it --env-file=.env -e "CONFIG=$(x jq -r tostring < "${DOC_SEARCH_CONFIG_FILE}")" algolia/docsearch-scraper
}

# Section: Main
case "${1}" in
    docsearch)      search_docsearch        ;;
    google)         search_google           ;;
    baidu)          search_baidu            ;;
    bing)           search_bing             ;;
    only_console)   search_only_console     ;;
    all)            search_all              ;;
    *)              search                  ;;
esac

)
